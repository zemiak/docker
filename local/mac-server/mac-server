#!/bin/sh
set -e

### BEGIN INIT INFO
# Provides:           mac-server
# Required-Start:     $syslog $remote_fs
# Required-Stop:      $syslog $remote_fs
# Should-Start:       cgroupfs-mount cgroup-lite
# Should-Stop:        cgroupfs-mount cgroup-lite
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  A virtualized MacOSX running iTunes for Home Sharing
### END INIT INFO

export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin

BASE=$(basename $0)

DESC="Virtualized iTunes Server"

# Get lsb functions
. /lib/lsb/init-functions

if [ -f /etc/default/$BASE ]; then
        . /etc/default/$BASE
fi

# see also init_is_upstart in /lib/lsb/init-functions (which isn't available in Ubuntu 12.04, or we'd use it)
if [ -x /sbin/initctl ] && /sbin/initctl version 2>/dev/null | grep -q upstart; then
        log_failure_msg "$DESC is managed via upstart, try using service $BASE $1"
        exit 1
fi

fail_unless_root() {
        if [ "$(id -u)" != '0' ]; then
                log_failure_msg "$DESC must be run as root"
                exit 1
        fi
}

case "$1" in
        start)
                fail_unless_root
                VBoxManage list runningvms | grep MacServer >/dev/null && (log_failure_msg "$DESC is already running" ; exit 1)
                log_begin_msg "Starting $DESC: $BASE"
                VBoxHeadless --startvm MacServer
                log_end_msg $?
                ;;

        stop)
                fail_unless_root
                VBoxManage list runningvms | grep MacServer >/dev/null || (log_failure_msg "$DESC is not running" ; exit 1)
                log_begin_msg "Stopping $DESC: $BASE"
                VBoxManage controlvm MacServer acpipowerbutton
                log_end_msg $?
                ;;

        restart)
                fail_unless_root
                $0 stop
                $0 start
                ;;

        force-reload)
                fail_unless_root
                $0 restart
                ;;

        status)
                VBoxManage list runningvms | grep MacServer >/dev/null && log_success_msg "$DESC is running" || log_failure_msg "$DESC is not running"
                ;;

        *)
                echo "Usage: $0 {start|stop|restart|status}"
                exit 1
                ;;
esac
